{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","components/Tab1.tsx","components/userList.tsx","components/adduser.tsx","components/Tab2.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","pagename","Tab1","fullscreen","collapse","size","UserList","tasks","updateTasks","useSpeak","speak","useIsScreenReaderEnabled","isScreenReaderEnabled","React","useState","Name","Quantity","edit","setUpdate","updateList","onChangeEdit","task","prevState","target","value","_id","FruitForm","fruit","setfruit","setTasks","onChange","console","log","getTasks","fetch","res","json","useEffect","onSubmit","preventDefault","method","headers","body","JSON","stringify","className","htmlFor","type","color","Tab2","App","exact","path","to","slot","tab","href","icon","help","list","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iHAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.3d77bdb5.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t89,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t90,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t91,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t92,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t93,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t94,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t95,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t96,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t97,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t98,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t99,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t100,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t101,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t102,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t103,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t104,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t105,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t106,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t107,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t108,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t109,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t110,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t111,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t112,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t113,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t114,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t115,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t116,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t117,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t118,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t119,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t120,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t121,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t122,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t123,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t124,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t125,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t126,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t127,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t128,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t129,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t130,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t131,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t132,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 65;\nmodule.exports = webpackAsyncContext;","import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport './Tab1.css';\r\nconst pagename=\"About\"\r\nconst Tab1: React.FC = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>{pagename}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{pagename}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\nHarrison Reid hreid1 test\r\n      </IonContent>\r\n      <br></br>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Tab1;\r\n","import { IonInput,IonContent,IonButton,IonCard,IonCardHeader,IonCardTitle,IonCardSubtitle,IonCardContent, IonItem } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport './adduser.css';\r\nimport { useIsScreenReaderEnabled, useSpeak  } from '@capacitor-community/react-hooks/accessibility';\r\nconst UserList = ({ tasks, updateTasks }) => {\r\n    const clickDeleteTask = (event, task) => {\r\n      event.preventDefault();\r\n  \r\n      fetch(`/api/tasks/delete/${task._id}`, {\r\n        method: 'delete',\r\n      })\r\n        .then(res => res.json())\r\n        .then(() => updateTasks());\r\n    };\r\n    const toggleEdit = task => {\r\n        fetch(`/api/tasks/update/${task._id}`, {\r\n          method: 'post',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ Name: task.Name,Quantity:task.Quantity,edit:true }),\r\n        }).then(() => updateTasks());\r\n      };\r\n    const onSubmitEdit = task => {\r\n        fetch(`/api/tasks/update/${task._id}`, {\r\n          method: 'post',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ Name: task.Name,Quantity:task.Quantity,edit:false }),\r\n        }).then(() => updateTasks());\r\n      };\r\n    const fruited={\r\n        Name:\"\",\r\n        Quantity:0,\r\n        edit:false\r\n      };\r\n  const { speak } = useSpeak();\r\n  const {isScreenReaderEnabled} = useIsScreenReaderEnabled();\r\n  const[updated,setUpdate]=React.useState(fruited);\r\n  const [updateList,setUpdateList]=React.useState([]);\r\n  const handleEdit= (index) =>{\r\n    if(updateList[index].edit==false){\r\n     const copied=[...updateList]\r\n     const item2 = {...updateList[index]};\r\n     item2.edit= true;\r\n     copied[index]=item2;\r\n     setUpdateList(copied);\r\n   }else{\r\n     const copied=[...updateList]\r\n     const item2 = {...updateList[index]};\r\n     item2.edit=false;\r\n     copied[index]=item2\r\n     setUpdateList(copied)}\r\n   };\r\n   const onChangeEdit =(task)=> (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setUpdate((prevState) => ({\r\n       ...prevState,\r\n       [e.target.id]: e.target.value,\r\n     }));\r\n   };\r\n\r\n   return (\r\n   <div>\r\n{updateList.map(task=>{\r\n\r\n      <div key={task._id}>\r\n    <IonCard>\r\n      <IonCardHeader >\r\n        <IonCardTitle  >\r\n          Item: {task.Name} \r\n        </IonCardTitle>\r\n        <IonCardSubtitle >\r\n          Quantity: {task.Quantity}\r\n        </IonCardSubtitle>\r\n      </IonCardHeader>\r\n      <IonButton color=\"danger\"onClick={event => clickDeleteTask(event, task)}>Remove Item </IonButton>\r\n      {isScreenReaderEnabled?<IonButton color=\"primary\"onClick={() =>speak({value:\"Test\"})}>Speak Name </IonButton>:\r\n      <IonButton color=\"danger\">Screen Reader Disabled </IonButton>\r\n      }\r\n      <IonButton color=\"warning\" onClick={()=>toggleEdit(task)}>Edit Item </IonButton>\r\n   </IonCard>\r\n   {task.edit? \r\n   <div >\r\n     <form onSubmit={()=>onSubmitEdit(task)} >\r\n    <label className='labels' htmlFor=\"Name\">Name: </label>\r\n    <input type=\"text\" id=\"Name\"  onChange={onChangeEdit(task)} />\r\n    <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n    <input  type=\"number\" id=\"Quantity\"  onChange={onChangeEdit(task)} />\r\n    <IonButton color=\"warning\" type=\"submit\" onClick={()=>handleEdit(task)}>Submit Changes</IonButton>\r\n  </form></div>:null }\r\n    </div>\r\n})\r\n} \r\n</div>);};\r\nexport default UserList;\r\n","import { IonButton} from \"@ionic/react\";\r\nimport {useState,useEffect} from \"react\";\r\nimport './adduser.css';\r\nimport UserList from './userList'\r\n\r\nexport default function FruitForm() {\r\n  const fruited={\r\n    Name:\"\",\r\n    Quantity:0,\r\n    edit:false\r\n  };\r\n  const [fruit, setfruit] = useState(fruited);\r\n  const [tasks, setTasks] = useState([]);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setfruit((prevState) => ({\r\n      ...prevState,\r\n      [e.target.id]: e.target.value,\r\n    }));\r\n    console.log(fruit)\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setfruit(fruit);\r\n    console.log(\"sent\")\r\n    fetch('/api/tasks/add', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ Name: fruit.Name,Quantity:fruit.Quantity, edit:fruit.edit }),\r\n    }).then(() => {\r\n      getTasks();\r\n    });\r\n  };\r\n  const getTasks = () => {\r\n    fetch('/api/tasks')\r\n      .then(res => res.json())\r\n      .then(setTasks);\r\n      console.log(\"sent\")\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div id='submitted'>\r\n      <form onSubmit={onSubmit}>\r\n        <label className='labels' htmlFor=\"Name\">Name: </label>\r\n        <input type=\"text\" id=\"Name\"  onChange={onChange} />\r\n        <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n        <input  type=\"number\" id=\"Quantity\"  onChange={onChange} />\r\n        <IonButton color=\"success\" type=\"submit\">Add Grocery Item</IonButton>\r\n      </form>\r\n<UserList tasks={tasks} updateTasks={getTasks}></UserList>\r\n   </div>\r\n    \r\n  );\r\n}\r\n// import React, { useState, useEffect, useCallback } from 'react';\r\n//  import '../App.css';\r\n\r\n\r\n// const App = () => {\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [newTaskTitle, setNewTaskTitle] = useState('');\r\n\r\n//   const getTasks = () => {\r\n//     fetch('/api/tasks')\r\n//       .then(res => res.json())\r\n//       .then(setTasks);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getTasks();\r\n//   }, []);\r\n\r\n//   const clickAddTask = event => {\r\n//     event.preventDefault();\r\n\r\n//     fetch('/api/tasks/add', {\r\n//       method: 'post',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ title: newTaskTitle }),\r\n//     }).then(() => {\r\n//       setNewTaskTitle('');\r\n//       getTasks();\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>My Tasks</h1>\r\n\r\n\r\n//       <form onSubmit={clickAddTask}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"New Task\"\r\n//           value={newTaskTitle}\r\n//           onChange={event => setNewTaskTitle(event.target.value)}\r\n//         />\r\n//         <input className=\"btn-primary\" type=\"submit\" value=\"Add\" />\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n","import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport './Tab2.css';\r\nimport FruitForm from '../components/adduser';\r\nconst Tab2: React.FC = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>List</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">List</IonTitle>\r\n          </IonToolbar>\r\n\r\n        </IonHeader>\r\n        <br></br>\r\n        <FruitForm></FruitForm>\r\n      </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Tab2;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport {\r\n  IonApp,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonRouterOutlet,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonTabs,\r\n} from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { help, cart, triangle,list } from 'ionicons/icons';\r\nimport Tab1 from './components/Tab1';\r\nimport Tab2 from './components/Tab2';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nconst App: React.FC = () => (\r\n  <IonApp>\r\n    <IonReactRouter>\r\n      <IonTabs>\r\n        <IonRouterOutlet>\r\n          <Route exact path=\"/tab1\">\r\n            <Tab1 />\r\n          </Route>\r\n          <Route exact path=\"/tab2\">\r\n            <Tab2 />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/tab1\" />\r\n          </Route>\r\n        </IonRouterOutlet>\r\n        <IonTabBar slot=\"bottom\">\r\n          <IonTabButton tab=\"tab1\" href=\"/tab1\">\r\n            <IonIcon icon={help} />\r\n            <IonLabel>About</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"tab2\" href=\"/tab2\">\r\n            <IonIcon icon={list} />\r\n            <IonLabel>List</IonLabel>\r\n          </IonTabButton>\r\n\r\n  \r\n        </IonTabBar>\r\n      </IonTabs>\r\n    </IonReactRouter>\r\n  </IonApp>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}