{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seaha\\\\Desktop\\\\groceries2\\\\client\\\\src\\\\components\\\\userList.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle } from \"@ionic/react\";\nimport React from \"react\";\nimport './adduser.css';\nimport { useIsScreenReaderEnabled, useSpeak } from '@capacitor-community/react-hooks/accessibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  tasks,\n  updateTasks\n}) => {\n  _s();\n\n  const clickDeleteTask = (event, task) => {\n    event.preventDefault();\n    fetch(`/api/tasks/delete/${task._id}`, {\n      method: 'delete'\n    }).then(res => res.json()).then(() => updateTasks());\n  };\n\n  const toggleEdit = task => {\n    fetch(`/api/tasks/update/${task._id}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: task.Name,\n        Quantity: task.Quantity,\n        edit: true\n      })\n    }).then(() => updateTasks());\n  };\n\n  const onSubmitEdit = task => {\n    fetch(`/api/tasks/update/${task._id}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: task.Name,\n        Quantity: task.Quantity,\n        edit: false\n      })\n    }).then(() => updateTasks());\n  };\n\n  const fruited = {\n    Name: \"\",\n    Quantity: 0,\n    edit: false\n  };\n  const {\n    speak\n  } = useSpeak();\n  const {\n    isScreenReaderEnabled\n  } = useIsScreenReaderEnabled();\n  const [updated, setUpdate] = React.useState(fruited);\n  const [updateList, setUpdateList] = React.useState([]);\n\n  const handleEdit = index => {\n    if (updateList[index].edit == false) {\n      const copied = [...updateList];\n      const item2 = { ...updateList[index]\n      };\n      item2.edit = true;\n      copied[index] = item2;\n      setUpdateList(copied);\n    } else {\n      const copied = [...updateList];\n      const item2 = { ...updateList[index]\n      };\n      item2.edit = false;\n      copied[index] = item2;\n      setUpdateList(copied);\n    }\n  };\n\n  const onChangeEdit = task => e => {\n    setUpdate(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(IonCardTitle, {\n              children: [\"Item: \", task.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n              children: [\"Quantity: \", task.Quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"danger\",\n            onClick: event => clickDeleteTask(event, task),\n            children: \"Remove Item \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), isScreenReaderEnabled ? /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"primary\",\n            onClick: () => speak({\n              value: \"Test\"\n            }),\n            children: \"Speak Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"danger\",\n            children: \"Screen Reader Disabled \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"warning\",\n            onClick: () => toggleEdit(task),\n            children: \"Edit Item \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), task.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: () => onSubmitEdit(task),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              htmlFor: \"Name\",\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"Name\",\n              onChange: onChangeEdit(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              htmlFor: \"Quantity\",\n              children: \"Quantity: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"Quantity\",\n              onChange: onChangeEdit(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n              color: \"warning\",\n              type: \"submit\",\n              onClick: () => handleEdit(task),\n              children: \"Submit Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }, this) : null]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 4\n  }, this);\n};\n\n_s(UserList, \"YnL19AeRHrzhyXc2M/6QS2EhzLw=\", false, function () {\n  return [useSpeak, useIsScreenReaderEnabled];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/seaha/Desktop/groceries2/client/src/components/userList.tsx"],"names":["IonButton","IonCard","IonCardHeader","IonCardTitle","IonCardSubtitle","React","useIsScreenReaderEnabled","useSpeak","UserList","tasks","updateTasks","clickDeleteTask","event","task","preventDefault","fetch","_id","method","then","res","json","toggleEdit","headers","body","JSON","stringify","Name","Quantity","edit","onSubmitEdit","fruited","speak","isScreenReaderEnabled","updated","setUpdate","useState","updateList","setUpdateList","handleEdit","index","copied","item2","onChangeEdit","e","prevState","target","id","value","map"],"mappings":"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","sourcesContent":["import { IonInput,IonContent,IonButton,IonCard,IonCardHeader,IonCardTitle,IonCardSubtitle,IonCardContent, IonItem } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport './adduser.css';\r\nimport { useIsScreenReaderEnabled, useSpeak  } from '@capacitor-community/react-hooks/accessibility';\r\n\r\nconst UserList = ({ tasks, updateTasks }) => {\r\n    const clickDeleteTask = (event, task) => {\r\n      event.preventDefault()\r\n      fetch(`/api/tasks/delete/${task._id}`, {\r\n        method: 'delete',\r\n      })\r\n        .then(res => res.json())\r\n        .then(() => updateTasks());\r\n    };\r\n    const toggleEdit = task => {\r\n        fetch(`/api/tasks/update/${task._id}`, {\r\n          method: 'post',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ Name: task.Name,Quantity:task.Quantity,edit:true }),\r\n        }).then(() => updateTasks());\r\n      };\r\n    const onSubmitEdit = task => {\r\n        fetch(`/api/tasks/update/${task._id}`, {\r\n          method: 'post',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ Name: task.Name,Quantity:task.Quantity,edit:false }),\r\n        }).then(() => updateTasks());\r\n      };\r\n    const fruited={\r\n        Name:\"\",\r\n        Quantity:0,\r\n        edit:false\r\n      };\r\n  const { speak } = useSpeak();\r\n  const {isScreenReaderEnabled} = useIsScreenReaderEnabled();\r\n  const[updated,setUpdate]=React.useState(fruited);\r\n  const [updateList,setUpdateList]=React.useState([]);\r\n  const handleEdit= (index) =>{\r\n    if(updateList[index].edit==false){\r\n     const copied=[...updateList]\r\n     const item2 = {...updateList[index]};\r\n     item2.edit= true;\r\n     copied[index]=item2;\r\n     setUpdateList(copied);\r\n   }else{\r\n     const copied=[...updateList]\r\n     const item2 = {...updateList[index]};\r\n     item2.edit=false;\r\n     copied[index]=item2\r\n     setUpdateList(copied)}\r\n   };\r\n   const onChangeEdit =(task)=> (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setUpdate((prevState) => ({\r\n       ...prevState,\r\n       [e.target.id]: e.target.value,\r\n     }));\r\n   };\r\n\r\n   return (\r\n   <div>\r\n{tasks.map(task=>{\r\nreturn(\r\n      <div key={task._id}>\r\n    <IonCard>\r\n      <IonCardHeader >\r\n        <IonCardTitle  >\r\n          Item: {task.Name} \r\n        </IonCardTitle>\r\n        <IonCardSubtitle >\r\n          Quantity: {task.Quantity}\r\n        </IonCardSubtitle>\r\n      </IonCardHeader>\r\n      <IonButton color=\"danger\"onClick={event => clickDeleteTask(event, task)}>Remove Item </IonButton>\r\n      {isScreenReaderEnabled?<IonButton color=\"primary\"onClick={() =>speak({value:\"Test\"})}>Speak Name </IonButton>:\r\n      <IonButton color=\"danger\">Screen Reader Disabled </IonButton>\r\n      }\r\n      <IonButton color=\"warning\" onClick={()=>toggleEdit(task)}>Edit Item </IonButton>\r\n   </IonCard>\r\n   {task.edit? \r\n   <div >\r\n     <form onSubmit={()=>onSubmitEdit(task)} >\r\n    <label className='labels' htmlFor=\"Name\">Name: </label>\r\n    <input type=\"text\" id=\"Name\"  onChange={onChangeEdit(task)} />\r\n    <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n    <input  type=\"number\" id=\"Quantity\"  onChange={onChangeEdit(task)} />\r\n    <IonButton color=\"warning\" type=\"submit\" onClick={()=>handleEdit(task)}>Submit Changes</IonButton>\r\n  </form></div>:null }\r\n    </div>)\r\n})\r\n} \r\n</div>);};\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}