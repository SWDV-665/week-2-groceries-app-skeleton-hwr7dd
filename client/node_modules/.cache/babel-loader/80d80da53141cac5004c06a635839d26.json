{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seaha\\\\Desktop\\\\groceries2\\\\client\\\\src\\\\components\\\\adduser.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton } from \"@ionic/react\";\nimport { useState, useEffect } from \"react\";\nimport './adduser.css';\nimport UserList from './userList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FruitForm() {\n  _s();\n\n  const fruited = {\n    Name: \"\",\n    Quantity: 0,\n    edit: false\n  };\n  const [fruit, setfruit] = useState(fruited);\n  const [tasks, setTasks] = useState([]);\n\n  const onChange = e => {\n    setfruit(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    console.log(fruit);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setfruit(fruit);\n    console.log(\"sent\");\n    fetch('/api/tasks/add', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: fruit.Name,\n        Quantity: fruit.Quantity,\n        edit: fruit.edit\n      })\n    }).then(() => {\n      setfruit(fruited);\n      getTasks();\n    });\n  };\n\n  const getTasks = () => {\n    fetch('/api/tasks').then(res => res.json()).then(setTasks);\n    console.log(\"sent\");\n  };\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"submitted\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labels\",\n        htmlFor: \"Name\",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Name\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labels\",\n        htmlFor: \"Quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Quantity\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        color: \"success\",\n        type: \"submit\",\n        children: \"Add Grocery Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      tasks: tasks,\n      updateTasks: getTasks,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // import React, { useState, useEffect, useCallback } from 'react';\n//  import '../App.css';\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTaskTitle, setNewTaskTitle] = useState('');\n//   const getTasks = () => {\n//     fetch('/api/tasks')\n//       .then(res => res.json())\n//       .then(setTasks);\n//   };\n//   useEffect(() => {\n//     getTasks();\n//   }, []);\n//   const clickAddTask = event => {\n//     event.preventDefault();\n//     fetch('/api/tasks/add', {\n//       method: 'post',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ title: newTaskTitle }),\n//     }).then(() => {\n//       setNewTaskTitle('');\n//       getTasks();\n//     });\n//   };\n//   return (\n//     <div className=\"App\">\n//       <h1>My Tasks</h1>\n//       <form onSubmit={clickAddTask}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"New Task\"\n//           value={newTaskTitle}\n//           onChange={event => setNewTaskTitle(event.target.value)}\n//         />\n//         <input className=\"btn-primary\" type=\"submit\" value=\"Add\" />\n//       </form>\n//     </div>\n//   );\n// };\n// export default App;\n\n_s(FruitForm, \"Lx5TVlxRAd1N01yuhl+JPzyckcM=\");\n\n_c = FruitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FruitForm\");","map":{"version":3,"sources":["C:/Users/seaha/Desktop/groceries2/client/src/components/adduser.tsx"],"names":["IonButton","useState","useEffect","UserList","FruitForm","fruited","Name","Quantity","edit","fruit","setfruit","tasks","setTasks","onChange","e","prevState","target","id","value","console","log","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","getTasks","res","json"],"mappings":"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","sourcesContent":["import { IonButton} from \"@ionic/react\";\r\nimport {useState,useEffect} from \"react\";\r\nimport './adduser.css';\r\nimport UserList from './userList'\r\n\r\nexport default function FruitForm() {\r\n  const fruited={\r\n    Name:\"\",\r\n    Quantity:0,\r\n    edit:false\r\n  };\r\n  const [fruit, setfruit] = useState(fruited);\r\n  const [tasks, setTasks] = useState([]);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setfruit((prevState) => ({\r\n      ...prevState,\r\n      [e.target.id]: e.target.value,\r\n    }));\r\n    console.log(fruit)\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setfruit(fruit);\r\n    console.log(\"sent\")\r\n    fetch('/api/tasks/add', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ Name: fruit.Name,Quantity:fruit.Quantity, edit:fruit.edit }),\r\n    }).then(() => {\r\n      setfruit(fruited)\r\n      getTasks();\r\n    });\r\n  };\r\n  const getTasks = () => {\r\n    fetch('/api/tasks')\r\n      .then(res => res.json())\r\n      .then(setTasks);\r\n      console.log(\"sent\")\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div id='submitted'>\r\n      <form onSubmit={onSubmit}>\r\n        <label className='labels' htmlFor=\"Name\">Name: </label>\r\n        <input type=\"text\" id=\"Name\"  onChange={onChange} />\r\n        <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n        <input  type=\"number\" id=\"Quantity\"  onChange={onChange} />\r\n        <IonButton color=\"success\" type=\"submit\">Add Grocery Item</IonButton>\r\n      </form>\r\n<UserList tasks={tasks} updateTasks={getTasks}>test</UserList>\r\n   </div>\r\n    \r\n  );\r\n}\r\n// import React, { useState, useEffect, useCallback } from 'react';\r\n//  import '../App.css';\r\n\r\n\r\n// const App = () => {\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [newTaskTitle, setNewTaskTitle] = useState('');\r\n\r\n//   const getTasks = () => {\r\n//     fetch('/api/tasks')\r\n//       .then(res => res.json())\r\n//       .then(setTasks);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getTasks();\r\n//   }, []);\r\n\r\n//   const clickAddTask = event => {\r\n//     event.preventDefault();\r\n\r\n//     fetch('/api/tasks/add', {\r\n//       method: 'post',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ title: newTaskTitle }),\r\n//     }).then(() => {\r\n//       setNewTaskTitle('');\r\n//       getTasks();\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>My Tasks</h1>\r\n\r\n\r\n//       <form onSubmit={clickAddTask}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"New Task\"\r\n//           value={newTaskTitle}\r\n//           onChange={event => setNewTaskTitle(event.target.value)}\r\n//         />\r\n//         <input className=\"btn-primary\" type=\"submit\" value=\"Add\" />\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}