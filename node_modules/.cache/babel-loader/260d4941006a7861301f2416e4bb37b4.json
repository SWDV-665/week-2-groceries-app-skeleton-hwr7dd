{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seaha\\\\Desktop\\\\Groceries\\\\src\\\\components\\\\adduser.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle } from \"@ionic/react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport './adduser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fruited = {\n  Name: \"\",\n  Quantity: 0,\n  edit: false\n};\nexport default function App() {\n  _s();\n\n  const [fruit, setfruit] = useState(fruited);\n  const [updated, setUpdate] = useState(fruited);\n  const [updateList, setUpdateList] = useState([]);\n  const [fruitList, setFruitList] = useState([]);\n\n  const onChange = e => {\n    setfruit(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    console.log(fruit);\n  };\n\n  const firstRun = useRef(true);\n\n  const handleRemoveItem = index => {\n    console.log(\"test\", index);\n    setUpdateList(updateList.filter((item, i) => i !== index));\n  };\n\n  const handleEdit = index => {\n    if (updateList[index].edit == false) {\n      const copied = [...updateList];\n      const item2 = { ...updateList[index]\n      };\n      item2.edit = true;\n      copied[index] = item2;\n      setUpdateList(copied);\n    } else {\n      const copied = [...updateList];\n      const item2 = { ...updateList[index]\n      };\n      item2.edit = false;\n      copied[index] = item2;\n      setUpdateList(copied);\n    }\n  };\n\n  const onChangeEdit = index => e => {\n    const clonedData = [...updateList];\n    clonedData[index][e.target.id] = e.target.value;\n    console.log(\"tested\", clonedData[index]);\n    setUpdateList(clonedData);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setfruit(fruit);\n    setFruitList([...fruitList, fruit]);\n    setUpdateList([...updateList, fruit]);\n  };\n\n  const onSubmitEdit = index => e => {\n    e.preventDefault();\n    const copied = [...updateList];\n    let item2 = { ...updateList[index]\n    };\n    console.log(updated);\n    item2 = updated;\n    item2.edit = false;\n    copied[index] = item2;\n    setUpdateList(copied); // setFruitList(fruitList.filter((i) => i !== index))\n    // setFruitList([...fruitList,updated]);\n    // setUpdate(updated);\n    // const copyed1=[...fruitList]\n    // setFruitList(copyed1.splice(index,1,updated));\n    // setEdit(false)\n  };\n\n  useEffect(() => {\n    if (firstRun.current) {\n      firstRun.current = false;\n      return;\n    }\n\n    console.log(fruitList);\n  }, [updateList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"submitted\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labels\",\n        htmlFor: \"Name\",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Name\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labels\",\n        htmlFor: \"Quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Quantity\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n        color: \"success\",\n        type: \"submit\",\n        children: \"Add Grocery Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), updateList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(IonCardTitle, {\n              children: [\"Item: \", item.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n              children: [\"Quantity: \", item.Quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"danger\",\n            onClick: () => handleRemoveItem(index),\n            children: \"Remove Item \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            color: \"warning\",\n            onClick: () => handleEdit(index),\n            children: \"Edit Item \"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), updateList[index].edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEdit(index),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              htmlFor: \"Name\",\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"Name\",\n              onChange: onChangeEdit(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              htmlFor: \"Quantity\",\n              children: \"Quantity: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"Quantity\",\n              onChange: onChangeEdit(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n              color: \"danger\",\n              type: \"submit\",\n              children: \"Close Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 10\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZJY3aRWcYBH6JN3/wZ6COv4142I=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/seaha/Desktop/Groceries/src/components/adduser.tsx"],"names":["IonButton","IonCard","IonCardHeader","IonCardTitle","IonCardSubtitle","useState","useEffect","useRef","fruited","Name","Quantity","edit","App","fruit","setfruit","updated","setUpdate","updateList","setUpdateList","fruitList","setFruitList","onChange","e","prevState","target","id","value","console","log","firstRun","handleRemoveItem","index","filter","item","i","handleEdit","copied","item2","onChangeEdit","clonedData","onSubmit","preventDefault","onSubmitEdit","current","map"],"mappings":"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","sourcesContent":["import { IonInput,IonContent,IonButton,IonCard,IonCardHeader,IonCardTitle,IonCardSubtitle,IonCardContent, IonItem } from \"@ionic/react\";\r\nimport {useState,useEffect,useRef} from \"react\";\r\nimport './adduser.css'\r\n\r\nconst fruited={\r\n  Name:\"\",\r\n  Quantity:0,\r\n  edit:false\r\n};\r\n\r\n\r\nexport default function App() {\r\n  const [fruit, setfruit] = useState(fruited);\r\n  const[updated,setUpdate]=useState(fruited);\r\n  const [updateList,setUpdateList]=useState([]);\r\n  const [fruitList,setFruitList]=useState([]);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setfruit((prevState) => ({\r\n      ...prevState,\r\n      [e.target.id]: e.target.value,\r\n    }));\r\n    console.log(fruit)\r\n  };\r\n  const firstRun = useRef(true);\r\n  const handleRemoveItem = index => {\r\n    console.log(\"test\",index)\r\n    setUpdateList(updateList.filter((item,i) => i !== index))\r\n};\r\nconst handleEdit= (index) =>{\r\n if(updateList[index].edit==false){\r\n  const copied=[...updateList]\r\n  const item2 = {...updateList[index]};\r\n  item2.edit= true;\r\n  copied[index]=item2;\r\n  setUpdateList(copied);\r\n}else{\r\n  const copied=[...updateList]\r\n  const item2 = {...updateList[index]};\r\n  item2.edit=false;\r\n  copied[index]=item2\r\n  setUpdateList(copied)}\r\n};\r\nconst onChangeEdit =(index)=> (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  const clonedData = [...updateList]\r\n  clonedData[index][e.target.id] = e.target.value;\r\n  console.log(\"tested\",clonedData[index])\r\n  setUpdateList(clonedData);\r\n};\r\n \r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setfruit(fruit);\r\n    setFruitList([...fruitList,fruit]);\r\n    setUpdateList([...updateList,fruit]);\r\n  };\r\n  const onSubmitEdit =(index)=> (e: React.FormEvent<HTMLFormElement>) =>{\r\n    e.preventDefault();\r\n    const copied=[...updateList]\r\n    let item2 = {...updateList[index]};\r\n    console.log(updated)\r\n    item2=updated;\r\n    item2.edit=false;\r\n    copied[index]=item2;\r\n    setUpdateList(copied)\r\n \r\n    // setFruitList(fruitList.filter((i) => i !== index))\r\n    // setFruitList([...fruitList,updated]);\r\n\r\n    // setUpdate(updated);\r\n    // const copyed1=[...fruitList]\r\n    // setFruitList(copyed1.splice(index,1,updated));\r\n    // setEdit(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRun.current){\r\n      firstRun.current=false;\r\n      return\r\n    }\r\n     console.log(fruitList);\r\n  }, [updateList]); \r\n\r\n  return (\r\n    <div id='submitted'>\r\n      <form onSubmit={onSubmit}>\r\n        <label className='labels' htmlFor=\"Name\">Name: </label>\r\n        <input type=\"text\" id=\"Name\"  onChange={onChange} />\r\n        <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n        <input  type=\"number\" id=\"Quantity\"  onChange={onChange} />\r\n        <IonButton color=\"success\" type=\"submit\">Add Grocery Item</IonButton>\r\n      </form>\r\n\r\n      {updateList.map((item,index)=>{\r\n        return(\r\n          <div key={index}>\r\n        <IonCard>\r\n          <IonCardHeader >\r\n            <IonCardTitle  >\r\n              Item: {item.Name} \r\n            </IonCardTitle>\r\n            <IonCardSubtitle >\r\n              Quantity: {item.Quantity}\r\n            </IonCardSubtitle>\r\n          </IonCardHeader>\r\n          <IonButton color=\"danger\"onClick={() =>handleRemoveItem(index)}>Remove Item </IonButton>\r\n          <IonButton key={index} color=\"warning\" onClick={()=>handleEdit(index)}>Edit Item </IonButton>\r\n       </IonCard>\r\n       {updateList[index].edit? <div key={index}>\r\n         <form onSubmit={handleEdit(index)}>\r\n        <label className='labels' htmlFor=\"Name\">Name: </label>\r\n        <input type=\"text\" id=\"Name\"  onChange={onChangeEdit(index)} />\r\n        <label className='labels' htmlFor=\"Quantity\">Quantity: </label>\r\n        <input  type=\"number\" id=\"Quantity\"  onChange={onChangeEdit(index)} />\r\n        <IonButton color=\"danger\" type=\"submit\">Close Editor</IonButton>\r\n      </form></div>:null }\r\n        </div>)\r\n      \r\n    })\r\n  } \r\n\r\n   </div>\r\n    \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}