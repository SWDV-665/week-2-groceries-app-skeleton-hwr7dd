{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seaha\\\\Desktop\\\\Groceries\\\\src\\\\pages\\\\Tab3.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport AddfruitForm from '../components/adduser';\nimport EditfruitForm from '../components/updatefruit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Data\n  const fruitsData = [{\n    id: 1,\n    name: 'Apple',\n    Price: 3\n  }, {\n    id: 2,\n    name: 'Orange',\n    Price: 3.5\n  }, {\n    id: 3,\n    name: 'Pear',\n    Price: 4\n  }];\n  const initialFormState = {\n    id: null,\n    name: '',\n    Price: 0\n  }; // Setting state\n\n  const [fruits, setfruits] = useState(fruitsData);\n  const [currentfruit, setCurrentfruit] = useState(initialFormState);\n  const [editing, setEditing] = useState(false); // CRUD operations\n\n  const addfruit = fruit => {\n    fruit.id = fruits.length + 1;\n    setfruits([...fruits, fruit]);\n  };\n\n  const deletefruit = id => {\n    setEditing(false);\n    setfruits(fruits.filter(fruit => fruit.id !== id));\n  };\n\n  const updatefruit = (id, updatedfruit) => {\n    setEditing(false);\n    setfruits(fruits.map(fruit => fruit.id === id ? updatedfruit : fruit));\n  };\n\n  const editRow = fruit => {\n    setEditing(true);\n    setCurrentfruit({\n      id: fruit.id,\n      name: fruit.name,\n      Price: fruit.Price\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD App with Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: editing ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit fruit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(EditfruitForm, {\n            editing: editing,\n            setEditing: setEditing,\n            currentfruit: currentfruit,\n            updatefruit: updatefruit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add fruit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(AddfruitForm, {\n            addfruit: addfruit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View fruits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"fruitTable\", {\n          fruits: fruits,\n          editRow: editRow,\n          deletefruit: deletefruit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"30/+K6Lp5xdUuOXkRHl5Sq5KH8k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/seaha/Desktop/Groceries/src/pages/Tab3.tsx"],"names":["React","useState","Fragment","AddfruitForm","EditfruitForm","App","fruitsData","id","name","Price","initialFormState","fruits","setfruits","currentfruit","setCurrentfruit","editing","setEditing","addfruit","fruit","length","deletefruit","filter","updatefruit","updatedfruit","map","editRow"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport AddfruitForm from '../components/adduser'\nimport EditfruitForm from '../components/updatefruit'\nimport fruitTable from '../components/table'\n\nconst App = () => {\n\t// Data\n\tconst fruitsData = [\n\t\t{ id: 1, name: 'Apple', Price: 3 },\n\t\t{ id: 2, name: 'Orange', Price: 3.5 },\n\t\t{ id: 3, name: 'Pear', Price: 4 },\n\t]\n\n\tconst initialFormState = { id: null, name: '', Price: 0 }\n\n\t// Setting state\n\tconst [ fruits, setfruits ] = useState(fruitsData)\n\tconst [ currentfruit, setCurrentfruit ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addfruit = (fruit: { id: any; name?: string  ; Price?: number  }) => {\n\t\tfruit.id = fruits.length + 1\n\t\tsetfruits([ ...fruits, fruit ])\n\t}\n\n\tconst deletefruit = (id: number) => {\n\t\tsetEditing(false)\n\n\t\tsetfruits(fruits.filter(fruit => fruit.id !== id))\n\t}\n\n\tconst updatefruit = (id: number, updatedfruit: any) => {\n\t\tsetEditing(false)\n\n\t\tsetfruits(fruits.map(fruit => (fruit.id === id ? updatedfruit : fruit)))\n\t}\n\n\tconst editRow = (fruit: { id: any; name: any; Price: any }) => {\n\t\tsetEditing(true)\n\n\t\tsetCurrentfruit({ id: fruit.id, name: fruit.name, Price: fruit.Price })\n\t}\n\n\treturn (\n\t\t<div >\n\t\t\t<h1>CRUD App with Hooks</h1>\n\t\t\t<div >\n\t\t\t<div>\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit fruit</h2>\n\t\t\t\t\t\t\t<EditfruitForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentfruit={currentfruit}\n\t\t\t\t\t\t\t\tupdatefruit={updatefruit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add fruit</h2>\n\t\t\t\t\t\t\t<AddfruitForm addfruit={addfruit} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>View fruits</h2>\n\t\t\t\t\t<fruitTable fruits={fruits} editRow={editRow} deletefruit={deletefruit} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}